package com.example.moviesapp.util

//класс обёртка в рамках чистой архитектуры
/*Ключевое слово sealed (изолированный, запечатанный) говорит,
что этот класс может иметь ограниченное количество
наследников и все они должны быть перечислены внутри
этого же класса. Благодаря этому можно использовать
класс-обёртку как объект с нужными данными и как
индикатор успешности в зависимости от того, наследника
какого типа вернёт репозиторий.*/
//этот класс имеет два состояния после запроса, ошибка или успешный запрос
sealed class Resource<T>(val data: T? = null, val message: String? = null) {
    class Success<T>(data: T): Resource<T>(data)
    class Error<T>(message: String, data: T? = null): Resource<T>(data, message)
}
